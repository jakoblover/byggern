
code_byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000c04  00000c98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  0080017a  0080017a  00000d12  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d12  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f8  00000000  00000000  00000d6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f6c  00000000  00000000  00000e66  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f8  00000000  00000000  00001dd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000054e  00000000  00000000  000023ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  00002918  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000359  00000000  00000000  00002abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000045b  00000000  00000000  00002e15  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00003270  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e0       	ldi	r30, 0x04	; 4
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 37       	cpi	r26, 0x7A	; 122
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e7       	ldi	r26, 0x7A	; 122
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a9 38       	cpi	r26, 0x89	; 137
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 77 00 	call	0xee	; 0xee <main>
  a6:	0c 94 00 06 	jmp	0xc00	; 0xc00 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
#include "ADC.h"

volatile uint8_t adc_conversion;

void adc_init(void){
	GICR |= (1 << INT2);
  ae:	8b b7       	in	r24, 0x3b	; 59
  b0:	80 62       	ori	r24, 0x20	; 32
  b2:	8b bf       	out	0x3b, r24	; 59
	EMCUCR &= ~(1 << ISC2);
  b4:	86 b7       	in	r24, 0x36	; 54
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	86 bf       	out	0x36, r24	; 54
	DDRE &= ~(1 << PE0); 
  ba:	30 98       	cbi	0x06, 0	; 6
  bc:	08 95       	ret

000000be <adc_read>:
}


uint8_t adc_read(adc_ch ch){
		volatile char *adc_ram = (char *) 0x1400; // Start address for the ADC
		adc_ram[0] = (uint8_t)ch;
  be:	80 93 00 14 	sts	0x1400, r24
		adc_conversion = 1;
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	80 93 7e 01 	sts	0x017E, r24
		//wait for adc to finish conversion, interrupt based
		while (adc_conversion){
  c8:	80 91 7e 01 	lds	r24, 0x017E
  cc:	81 11       	cpse	r24, r1
  ce:	fc cf       	rjmp	.-8      	; 0xc8 <adc_read+0xa>
			//do nothing, wait for interrupt
		}
		return adc_ram[0];
  d0:	80 91 00 14 	lds	r24, 0x1400
}
  d4:	08 95       	ret

000000d6 <__vector_3>:
#define LED 0
#define SW1 1



ISR(INT2_vect){
  d6:	1f 92       	push	r1
  d8:	0f 92       	push	r0
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	0f 92       	push	r0
  de:	11 24       	eor	r1, r1
	adc_conversion = 0;
  e0:	10 92 7e 01 	sts	0x017E, r1
}
  e4:	0f 90       	pop	r0
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	0f 90       	pop	r0
  ea:	1f 90       	pop	r1
  ec:	18 95       	reti

000000ee <main>:

int main(void) {
	DDRB |= (1 << PB0);
  ee:	b8 9a       	sbi	0x17, 0	; 23
	DDRB &= ~(1 << PB1);
  f0:	b9 98       	cbi	0x17, 1	; 23
	DDRB &= ~(1 << PB2);
  f2:	ba 98       	cbi	0x17, 2	; 23
	MCUCR |= (1 << SRE);
  f4:	85 b7       	in	r24, 0x35	; 53
  f6:	80 68       	ori	r24, 0x80	; 128
  f8:	85 bf       	out	0x35, r24	; 53
	uart_init();
  fa:	0e 94 40 01 	call	0x280	; 0x280 <uart_init>
	printf("\f");
  fe:	8c e0       	ldi	r24, 0x0C	; 12
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <putchar>
	puts("Uart initialized\r");
 106:	86 e0       	ldi	r24, 0x06	; 6
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
	adc_init();
 10e:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	puts("ADC initialized\r");
 112:	88 e1       	ldi	r24, 0x18	; 24
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
	sei();
 11a:	78 94       	sei
	puts("Global interrupts enabled\r");				
 11c:	89 e2       	ldi	r24, 0x29	; 41
 11e:	91 e0       	ldi	r25, 0x01	; 1
 120:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
	joy_init();
 124:	0e 94 be 00 	call	0x17c	; 0x17c <joy_init>
	puts("Joystick initialized\r");
 128:	84 e4       	ldi	r24, 0x44	; 68
 12a:	91 e0       	ldi	r25, 0x01	; 1
 12c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
	oled_init();
 130:	0e 94 0a 01 	call	0x214	; 0x214 <oled_init>
	puts("Oled initialized\r");
 134:	8a e5       	ldi	r24, 0x5A	; 90
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	0e 94 da 01 	call	0x3b4	; 0x3b4 <puts>
	while(1) {
		if ((PINB &(1<<SW1))){
			PORTB ^= (1 << LED);	
 13c:	11 e0       	ldi	r17, 0x01	; 1
		}
		PORTB ^= (1 << LED);
		//printf("adc1: %i, adc2: %i, adc3: %i, adc4: %i\n", adc_read(0b00000100),adc_read(0b00000101), adc_read(0b00000110), adc_read(0b00000111));
		joy_pos_t pos = joy_getPos();
		printf("X:%4i Y:%4i\r",pos.x,pos.y);
 13e:	cc e6       	ldi	r28, 0x6C	; 108
 140:	d1 e0       	ldi	r29, 0x01	; 1
	joy_init();
	puts("Joystick initialized\r");
	oled_init();
	puts("Oled initialized\r");
	while(1) {
		if ((PINB &(1<<SW1))){
 142:	b1 9b       	sbis	0x16, 1	; 22
 144:	03 c0       	rjmp	.+6      	; 0x14c <main+0x5e>
			PORTB ^= (1 << LED);	
 146:	88 b3       	in	r24, 0x18	; 24
 148:	81 27       	eor	r24, r17
 14a:	88 bb       	out	0x18, r24	; 24
		}
		PORTB ^= (1 << LED);
 14c:	88 b3       	in	r24, 0x18	; 24
 14e:	81 27       	eor	r24, r17
 150:	88 bb       	out	0x18, r24	; 24
		//printf("adc1: %i, adc2: %i, adc3: %i, adc4: %i\n", adc_read(0b00000100),adc_read(0b00000101), adc_read(0b00000110), adc_read(0b00000111));
		joy_pos_t pos = joy_getPos();
 152:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <joy_getPos>
		printf("X:%4i Y:%4i\r",pos.x,pos.y);
 156:	9f 93       	push	r25
 158:	8f 93       	push	r24
 15a:	7f 93       	push	r23
 15c:	6f 93       	push	r22
 15e:	df 93       	push	r29
 160:	cf 93       	push	r28
 162:	0e 94 bf 01 	call	0x37e	; 0x37e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 ef       	ldi	r25, 0xF0	; 240
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <main+0x7c>
		
		_delay_ms(50);
    }
 16e:	0f 90       	pop	r0
 170:	0f 90       	pop	r0
 172:	0f 90       	pop	r0
 174:	0f 90       	pop	r0
 176:	0f 90       	pop	r0
 178:	0f 90       	pop	r0
 17a:	e3 cf       	rjmp	.-58     	; 0x142 <main+0x54>

0000017c <joy_init>:

static int16_t x_center;
static int16_t y_center;

void joy_init(void){
	x_center=adc_read(joy_x);
 17c:	86 e0       	ldi	r24, 0x06	; 6
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 5f 00 	call	0xbe	; 0xbe <adc_read>
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	90 93 7d 01 	sts	0x017D, r25
 18a:	80 93 7c 01 	sts	0x017C, r24
	y_center=adc_read(joy_y);
 18e:	87 e0       	ldi	r24, 0x07	; 7
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 5f 00 	call	0xbe	; 0xbe <adc_read>
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	90 93 7b 01 	sts	0x017B, r25
 19c:	80 93 7a 01 	sts	0x017A, r24
 1a0:	08 95       	ret

000001a2 <joy_getPos>:
}

joy_pos_t joy_getPos(void){
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
	int16_t pos_x=adc_read(joy_x);
 1aa:	86 e0       	ldi	r24, 0x06	; 6
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 5f 00 	call	0xbe	; 0xbe <adc_read>
 1b2:	08 2f       	mov	r16, r24
 1b4:	10 e0       	ldi	r17, 0x00	; 0
	int16_t pos_y=adc_read(joy_y);
 1b6:	87 e0       	ldi	r24, 0x07	; 7
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 5f 00 	call	0xbe	; 0xbe <adc_read>
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
	pos_x-=x_center;
 1c2:	80 91 7c 01 	lds	r24, 0x017C
 1c6:	90 91 7d 01 	lds	r25, 0x017D
 1ca:	08 1b       	sub	r16, r24
 1cc:	19 0b       	sbc	r17, r25
	pos_y-=y_center;
	pos_x=(pos_x*100)/127;
 1ce:	64 e6       	ldi	r22, 0x64	; 100
 1d0:	60 9f       	mul	r22, r16
 1d2:	c0 01       	movw	r24, r0
 1d4:	61 9f       	mul	r22, r17
 1d6:	90 0d       	add	r25, r0
 1d8:	11 24       	eor	r1, r1

joy_pos_t joy_getPos(void){
	int16_t pos_x=adc_read(joy_x);
	int16_t pos_y=adc_read(joy_y);
	pos_x-=x_center;
	pos_y-=y_center;
 1da:	40 91 7a 01 	lds	r20, 0x017A
 1de:	50 91 7b 01 	lds	r21, 0x017B
 1e2:	24 1b       	sub	r18, r20
 1e4:	35 0b       	sbc	r19, r21
	pos_x=(pos_x*100)/127;
	pos_y=(pos_y*100)/127;
 1e6:	62 9f       	mul	r22, r18
 1e8:	e0 01       	movw	r28, r0
 1ea:	63 9f       	mul	r22, r19
 1ec:	d0 0d       	add	r29, r0
 1ee:	11 24       	eor	r1, r1
joy_pos_t joy_getPos(void){
	int16_t pos_x=adc_read(joy_x);
	int16_t pos_y=adc_read(joy_y);
	pos_x-=x_center;
	pos_y-=y_center;
	pos_x=(pos_x*100)/127;
 1f0:	ef e7       	ldi	r30, 0x7F	; 127
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	bf 01       	movw	r22, r30
 1f6:	0e 94 4c 01 	call	0x298	; 0x298 <__divmodhi4>
	pos_y=(pos_y*100)/127;
	joy_pos_t pos_tmp;
	pos_tmp.x=pos_x;
	pos_tmp.y=pos_y;
	return pos_tmp;
 1fa:	8b 01       	movw	r16, r22
 1fc:	ce 01       	movw	r24, r28
 1fe:	bf 01       	movw	r22, r30
 200:	0e 94 4c 01 	call	0x298	; 0x298 <__divmodhi4>
 204:	9b 01       	movw	r18, r22
}
 206:	c9 01       	movw	r24, r18
 208:	b8 01       	movw	r22, r16
 20a:	df 91       	pop	r29
 20c:	cf 91       	pop	r28
 20e:	1f 91       	pop	r17
 210:	0f 91       	pop	r16
 212:	08 95       	ret

00000214 <oled_init>:
#include "oled.h"

//PRIVATE
static inline void oled_write_cmd(char cmd){
	volatile char * ext_oled_cmd = (char *) 0x1000;
	*ext_oled_cmd = cmd;
 214:	e0 e0       	ldi	r30, 0x00	; 0
 216:	f0 e1       	ldi	r31, 0x10	; 16
 218:	8e ea       	ldi	r24, 0xAE	; 174
 21a:	80 83       	st	Z, r24
 21c:	81 ea       	ldi	r24, 0xA1	; 161
 21e:	80 83       	st	Z, r24
 220:	8a ed       	ldi	r24, 0xDA	; 218
 222:	80 83       	st	Z, r24
 224:	82 e1       	ldi	r24, 0x12	; 18
 226:	80 83       	st	Z, r24
 228:	88 ec       	ldi	r24, 0xC8	; 200
 22a:	80 83       	st	Z, r24
 22c:	88 ea       	ldi	r24, 0xA8	; 168
 22e:	80 83       	st	Z, r24
 230:	8f e3       	ldi	r24, 0x3F	; 63
 232:	80 83       	st	Z, r24
 234:	85 ed       	ldi	r24, 0xD5	; 213
 236:	80 83       	st	Z, r24
 238:	80 e8       	ldi	r24, 0x80	; 128
 23a:	80 83       	st	Z, r24
 23c:	81 e8       	ldi	r24, 0x81	; 129
 23e:	80 83       	st	Z, r24
 240:	80 e5       	ldi	r24, 0x50	; 80
 242:	80 83       	st	Z, r24
 244:	89 ed       	ldi	r24, 0xD9	; 217
 246:	80 83       	st	Z, r24
 248:	81 e2       	ldi	r24, 0x21	; 33
 24a:	80 83       	st	Z, r24
 24c:	80 e2       	ldi	r24, 0x20	; 32
 24e:	80 83       	st	Z, r24
 250:	82 e0       	ldi	r24, 0x02	; 2
 252:	80 83       	st	Z, r24
 254:	8b ed       	ldi	r24, 0xDB	; 219
 256:	80 83       	st	Z, r24
 258:	80 e3       	ldi	r24, 0x30	; 48
 25a:	80 83       	st	Z, r24
 25c:	8d ea       	ldi	r24, 0xAD	; 173
 25e:	80 83       	st	Z, r24
 260:	10 82       	st	Z, r1
 262:	84 ea       	ldi	r24, 0xA4	; 164
 264:	80 83       	st	Z, r24
 266:	86 ea       	ldi	r24, 0xA6	; 166
 268:	80 83       	st	Z, r24
 26a:	8f ea       	ldi	r24, 0xAF	; 175
 26c:	80 83       	st	Z, r24
 26e:	08 95       	ret

00000270 <uart_putChar>:
	fdevopen(uart_putChar, uart_getChar);
}


void uart_putChar(unsigned char c){
	while (!(UCSR0A & (1<<UDRE0))); //Wait for empty transmit buffer
 270:	5d 9b       	sbis	0x0b, 5	; 11
 272:	fe cf       	rjmp	.-4      	; 0x270 <uart_putChar>
	UDR0 = c; // Put data in to buffer
 274:	8c b9       	out	0x0c, r24	; 12
 276:	08 95       	ret

00000278 <uart_getChar>:
}


unsigned char uart_getChar(){
	
	while((UCSR0A) & (1<<UDRE0)); //Wait for "full" transmit buffer
 278:	5d 99       	sbic	0x0b, 5	; 11
 27a:	fe cf       	rjmp	.-4      	; 0x278 <uart_getChar>
	return UDR0;
 27c:	8c b1       	in	r24, 0x0c	; 12
}
 27e:	08 95       	ret

00000280 <uart_init>:
#include "uart.h"
#include <stdio.h>

void uart_init(void){
	//UBRR0L = 15;	// baudrate 192000hz
	UBRR0L = 0b00001111;
 280:	8f e0       	ldi	r24, 0x0F	; 15
 282:	89 b9       	out	0x09, r24	; 9
	
	//Character size
	//UCSR0C |= (1 << UCSZ00) | (1 << UCSZ01);
	//UCSR0B &= ~(1 << UCSZ02);
	
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
 284:	8a b1       	in	r24, 0x0a	; 10
 286:	88 61       	ori	r24, 0x18	; 24
 288:	8a b9       	out	0x0a, r24	; 10
	
	//for puts and printf
	fdevopen(uart_putChar, uart_getChar);
 28a:	6c e3       	ldi	r22, 0x3C	; 60
 28c:	71 e0       	ldi	r23, 0x01	; 1
 28e:	88 e3       	ldi	r24, 0x38	; 56
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	0e 94 74 01 	call	0x2e8	; 0x2e8 <fdevopen>
 296:	08 95       	ret

00000298 <__divmodhi4>:
 298:	97 fb       	bst	r25, 7
 29a:	07 2e       	mov	r0, r23
 29c:	16 f4       	brtc	.+4      	; 0x2a2 <__divmodhi4+0xa>
 29e:	00 94       	com	r0
 2a0:	07 d0       	rcall	.+14     	; 0x2b0 <__divmodhi4_neg1>
 2a2:	77 fd       	sbrc	r23, 7
 2a4:	09 d0       	rcall	.+18     	; 0x2b8 <__divmodhi4_neg2>
 2a6:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__udivmodhi4>
 2aa:	07 fc       	sbrc	r0, 7
 2ac:	05 d0       	rcall	.+10     	; 0x2b8 <__divmodhi4_neg2>
 2ae:	3e f4       	brtc	.+14     	; 0x2be <__divmodhi4_exit>

000002b0 <__divmodhi4_neg1>:
 2b0:	90 95       	com	r25
 2b2:	81 95       	neg	r24
 2b4:	9f 4f       	sbci	r25, 0xFF	; 255
 2b6:	08 95       	ret

000002b8 <__divmodhi4_neg2>:
 2b8:	70 95       	com	r23
 2ba:	61 95       	neg	r22
 2bc:	7f 4f       	sbci	r23, 0xFF	; 255

000002be <__divmodhi4_exit>:
 2be:	08 95       	ret

000002c0 <__udivmodhi4>:
 2c0:	aa 1b       	sub	r26, r26
 2c2:	bb 1b       	sub	r27, r27
 2c4:	51 e1       	ldi	r21, 0x11	; 17
 2c6:	07 c0       	rjmp	.+14     	; 0x2d6 <__udivmodhi4_ep>

000002c8 <__udivmodhi4_loop>:
 2c8:	aa 1f       	adc	r26, r26
 2ca:	bb 1f       	adc	r27, r27
 2cc:	a6 17       	cp	r26, r22
 2ce:	b7 07       	cpc	r27, r23
 2d0:	10 f0       	brcs	.+4      	; 0x2d6 <__udivmodhi4_ep>
 2d2:	a6 1b       	sub	r26, r22
 2d4:	b7 0b       	sbc	r27, r23

000002d6 <__udivmodhi4_ep>:
 2d6:	88 1f       	adc	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	5a 95       	dec	r21
 2dc:	a9 f7       	brne	.-22     	; 0x2c8 <__udivmodhi4_loop>
 2de:	80 95       	com	r24
 2e0:	90 95       	com	r25
 2e2:	bc 01       	movw	r22, r24
 2e4:	cd 01       	movw	r24, r26
 2e6:	08 95       	ret

000002e8 <fdevopen>:
 2e8:	0f 93       	push	r16
 2ea:	1f 93       	push	r17
 2ec:	cf 93       	push	r28
 2ee:	df 93       	push	r29
 2f0:	ec 01       	movw	r28, r24
 2f2:	8b 01       	movw	r16, r22
 2f4:	00 97       	sbiw	r24, 0x00	; 0
 2f6:	31 f4       	brne	.+12     	; 0x304 <fdevopen+0x1c>
 2f8:	61 15       	cp	r22, r1
 2fa:	71 05       	cpc	r23, r1
 2fc:	19 f4       	brne	.+6      	; 0x304 <fdevopen+0x1c>
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	38 c0       	rjmp	.+112    	; 0x374 <fdevopen+0x8c>
 304:	6e e0       	ldi	r22, 0x0E	; 14
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <calloc>
 310:	fc 01       	movw	r30, r24
 312:	00 97       	sbiw	r24, 0x00	; 0
 314:	a1 f3       	breq	.-24     	; 0x2fe <fdevopen+0x16>
 316:	80 e8       	ldi	r24, 0x80	; 128
 318:	83 83       	std	Z+3, r24	; 0x03
 31a:	01 15       	cp	r16, r1
 31c:	11 05       	cpc	r17, r1
 31e:	71 f0       	breq	.+28     	; 0x33c <fdevopen+0x54>
 320:	13 87       	std	Z+11, r17	; 0x0b
 322:	02 87       	std	Z+10, r16	; 0x0a
 324:	81 e8       	ldi	r24, 0x81	; 129
 326:	83 83       	std	Z+3, r24	; 0x03
 328:	80 91 7f 01 	lds	r24, 0x017F
 32c:	90 91 80 01 	lds	r25, 0x0180
 330:	89 2b       	or	r24, r25
 332:	21 f4       	brne	.+8      	; 0x33c <fdevopen+0x54>
 334:	f0 93 80 01 	sts	0x0180, r31
 338:	e0 93 7f 01 	sts	0x017F, r30
 33c:	20 97       	sbiw	r28, 0x00	; 0
 33e:	c9 f0       	breq	.+50     	; 0x372 <fdevopen+0x8a>
 340:	d1 87       	std	Z+9, r29	; 0x09
 342:	c0 87       	std	Z+8, r28	; 0x08
 344:	83 81       	ldd	r24, Z+3	; 0x03
 346:	82 60       	ori	r24, 0x02	; 2
 348:	83 83       	std	Z+3, r24	; 0x03
 34a:	80 91 81 01 	lds	r24, 0x0181
 34e:	90 91 82 01 	lds	r25, 0x0182
 352:	89 2b       	or	r24, r25
 354:	71 f4       	brne	.+28     	; 0x372 <fdevopen+0x8a>
 356:	f0 93 82 01 	sts	0x0182, r31
 35a:	e0 93 81 01 	sts	0x0181, r30
 35e:	80 91 83 01 	lds	r24, 0x0183
 362:	90 91 84 01 	lds	r25, 0x0184
 366:	89 2b       	or	r24, r25
 368:	21 f4       	brne	.+8      	; 0x372 <fdevopen+0x8a>
 36a:	f0 93 84 01 	sts	0x0184, r31
 36e:	e0 93 83 01 	sts	0x0183, r30
 372:	cf 01       	movw	r24, r30
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	0f 91       	pop	r16
 37c:	08 95       	ret

0000037e <printf>:
 37e:	a0 e0       	ldi	r26, 0x00	; 0
 380:	b0 e0       	ldi	r27, 0x00	; 0
 382:	e5 ec       	ldi	r30, 0xC5	; 197
 384:	f1 e0       	ldi	r31, 0x01	; 1
 386:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <__prologue_saves__+0x20>
 38a:	fe 01       	movw	r30, r28
 38c:	35 96       	adiw	r30, 0x05	; 5
 38e:	61 91       	ld	r22, Z+
 390:	71 91       	ld	r23, Z+
 392:	af 01       	movw	r20, r30
 394:	80 91 81 01 	lds	r24, 0x0181
 398:	90 91 82 01 	lds	r25, 0x0182
 39c:	0e 94 07 02 	call	0x40e	; 0x40e <vfprintf>
 3a0:	e2 e0       	ldi	r30, 0x02	; 2
 3a2:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__epilogue_restores__+0x20>

000003a6 <putchar>:
 3a6:	60 91 81 01 	lds	r22, 0x0181
 3aa:	70 91 82 01 	lds	r23, 0x0182
 3ae:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 3b2:	08 95       	ret

000003b4 <puts>:
 3b4:	0f 93       	push	r16
 3b6:	1f 93       	push	r17
 3b8:	cf 93       	push	r28
 3ba:	df 93       	push	r29
 3bc:	e0 91 81 01 	lds	r30, 0x0181
 3c0:	f0 91 82 01 	lds	r31, 0x0182
 3c4:	23 81       	ldd	r18, Z+3	; 0x03
 3c6:	21 ff       	sbrs	r18, 1
 3c8:	1b c0       	rjmp	.+54     	; 0x400 <puts+0x4c>
 3ca:	ec 01       	movw	r28, r24
 3cc:	00 e0       	ldi	r16, 0x00	; 0
 3ce:	10 e0       	ldi	r17, 0x00	; 0
 3d0:	89 91       	ld	r24, Y+
 3d2:	60 91 81 01 	lds	r22, 0x0181
 3d6:	70 91 82 01 	lds	r23, 0x0182
 3da:	db 01       	movw	r26, r22
 3dc:	18 96       	adiw	r26, 0x08	; 8
 3de:	ed 91       	ld	r30, X+
 3e0:	fc 91       	ld	r31, X
 3e2:	19 97       	sbiw	r26, 0x09	; 9
 3e4:	88 23       	and	r24, r24
 3e6:	31 f0       	breq	.+12     	; 0x3f4 <puts+0x40>
 3e8:	09 95       	icall
 3ea:	89 2b       	or	r24, r25
 3ec:	89 f3       	breq	.-30     	; 0x3d0 <puts+0x1c>
 3ee:	0f ef       	ldi	r16, 0xFF	; 255
 3f0:	1f ef       	ldi	r17, 0xFF	; 255
 3f2:	ee cf       	rjmp	.-36     	; 0x3d0 <puts+0x1c>
 3f4:	8a e0       	ldi	r24, 0x0A	; 10
 3f6:	09 95       	icall
 3f8:	89 2b       	or	r24, r25
 3fa:	11 f4       	brne	.+4      	; 0x400 <puts+0x4c>
 3fc:	c8 01       	movw	r24, r16
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <puts+0x50>
 400:	8f ef       	ldi	r24, 0xFF	; 255
 402:	9f ef       	ldi	r25, 0xFF	; 255
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	1f 91       	pop	r17
 40a:	0f 91       	pop	r16
 40c:	08 95       	ret

0000040e <vfprintf>:
 40e:	ac e0       	ldi	r26, 0x0C	; 12
 410:	b0 e0       	ldi	r27, 0x00	; 0
 412:	ed e0       	ldi	r30, 0x0D	; 13
 414:	f2 e0       	ldi	r31, 0x02	; 2
 416:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <__prologue_saves__>
 41a:	7c 01       	movw	r14, r24
 41c:	6b 01       	movw	r12, r22
 41e:	8a 01       	movw	r16, r20
 420:	fc 01       	movw	r30, r24
 422:	17 82       	std	Z+7, r1	; 0x07
 424:	16 82       	std	Z+6, r1	; 0x06
 426:	83 81       	ldd	r24, Z+3	; 0x03
 428:	81 ff       	sbrs	r24, 1
 42a:	bd c1       	rjmp	.+890    	; 0x7a6 <__stack+0x2a7>
 42c:	ce 01       	movw	r24, r28
 42e:	01 96       	adiw	r24, 0x01	; 1
 430:	4c 01       	movw	r8, r24
 432:	f7 01       	movw	r30, r14
 434:	93 81       	ldd	r25, Z+3	; 0x03
 436:	f6 01       	movw	r30, r12
 438:	93 fd       	sbrc	r25, 3
 43a:	85 91       	lpm	r24, Z+
 43c:	93 ff       	sbrs	r25, 3
 43e:	81 91       	ld	r24, Z+
 440:	6f 01       	movw	r12, r30
 442:	88 23       	and	r24, r24
 444:	09 f4       	brne	.+2      	; 0x448 <vfprintf+0x3a>
 446:	ab c1       	rjmp	.+854    	; 0x79e <__stack+0x29f>
 448:	85 32       	cpi	r24, 0x25	; 37
 44a:	39 f4       	brne	.+14     	; 0x45a <vfprintf+0x4c>
 44c:	93 fd       	sbrc	r25, 3
 44e:	85 91       	lpm	r24, Z+
 450:	93 ff       	sbrs	r25, 3
 452:	81 91       	ld	r24, Z+
 454:	6f 01       	movw	r12, r30
 456:	85 32       	cpi	r24, 0x25	; 37
 458:	29 f4       	brne	.+10     	; 0x464 <vfprintf+0x56>
 45a:	b7 01       	movw	r22, r14
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 462:	e7 cf       	rjmp	.-50     	; 0x432 <vfprintf+0x24>
 464:	51 2c       	mov	r5, r1
 466:	31 2c       	mov	r3, r1
 468:	20 e0       	ldi	r18, 0x00	; 0
 46a:	20 32       	cpi	r18, 0x20	; 32
 46c:	a0 f4       	brcc	.+40     	; 0x496 <vfprintf+0x88>
 46e:	8b 32       	cpi	r24, 0x2B	; 43
 470:	69 f0       	breq	.+26     	; 0x48c <vfprintf+0x7e>
 472:	30 f4       	brcc	.+12     	; 0x480 <vfprintf+0x72>
 474:	80 32       	cpi	r24, 0x20	; 32
 476:	59 f0       	breq	.+22     	; 0x48e <vfprintf+0x80>
 478:	83 32       	cpi	r24, 0x23	; 35
 47a:	69 f4       	brne	.+26     	; 0x496 <vfprintf+0x88>
 47c:	20 61       	ori	r18, 0x10	; 16
 47e:	2c c0       	rjmp	.+88     	; 0x4d8 <vfprintf+0xca>
 480:	8d 32       	cpi	r24, 0x2D	; 45
 482:	39 f0       	breq	.+14     	; 0x492 <vfprintf+0x84>
 484:	80 33       	cpi	r24, 0x30	; 48
 486:	39 f4       	brne	.+14     	; 0x496 <vfprintf+0x88>
 488:	21 60       	ori	r18, 0x01	; 1
 48a:	26 c0       	rjmp	.+76     	; 0x4d8 <vfprintf+0xca>
 48c:	22 60       	ori	r18, 0x02	; 2
 48e:	24 60       	ori	r18, 0x04	; 4
 490:	23 c0       	rjmp	.+70     	; 0x4d8 <vfprintf+0xca>
 492:	28 60       	ori	r18, 0x08	; 8
 494:	21 c0       	rjmp	.+66     	; 0x4d8 <vfprintf+0xca>
 496:	27 fd       	sbrc	r18, 7
 498:	27 c0       	rjmp	.+78     	; 0x4e8 <vfprintf+0xda>
 49a:	30 ed       	ldi	r19, 0xD0	; 208
 49c:	38 0f       	add	r19, r24
 49e:	3a 30       	cpi	r19, 0x0A	; 10
 4a0:	78 f4       	brcc	.+30     	; 0x4c0 <vfprintf+0xb2>
 4a2:	26 ff       	sbrs	r18, 6
 4a4:	06 c0       	rjmp	.+12     	; 0x4b2 <vfprintf+0xa4>
 4a6:	fa e0       	ldi	r31, 0x0A	; 10
 4a8:	5f 9e       	mul	r5, r31
 4aa:	30 0d       	add	r19, r0
 4ac:	11 24       	eor	r1, r1
 4ae:	53 2e       	mov	r5, r19
 4b0:	13 c0       	rjmp	.+38     	; 0x4d8 <vfprintf+0xca>
 4b2:	8a e0       	ldi	r24, 0x0A	; 10
 4b4:	38 9e       	mul	r3, r24
 4b6:	30 0d       	add	r19, r0
 4b8:	11 24       	eor	r1, r1
 4ba:	33 2e       	mov	r3, r19
 4bc:	20 62       	ori	r18, 0x20	; 32
 4be:	0c c0       	rjmp	.+24     	; 0x4d8 <vfprintf+0xca>
 4c0:	8e 32       	cpi	r24, 0x2E	; 46
 4c2:	21 f4       	brne	.+8      	; 0x4cc <vfprintf+0xbe>
 4c4:	26 fd       	sbrc	r18, 6
 4c6:	6b c1       	rjmp	.+726    	; 0x79e <__stack+0x29f>
 4c8:	20 64       	ori	r18, 0x40	; 64
 4ca:	06 c0       	rjmp	.+12     	; 0x4d8 <vfprintf+0xca>
 4cc:	8c 36       	cpi	r24, 0x6C	; 108
 4ce:	11 f4       	brne	.+4      	; 0x4d4 <vfprintf+0xc6>
 4d0:	20 68       	ori	r18, 0x80	; 128
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <vfprintf+0xca>
 4d4:	88 36       	cpi	r24, 0x68	; 104
 4d6:	41 f4       	brne	.+16     	; 0x4e8 <vfprintf+0xda>
 4d8:	f6 01       	movw	r30, r12
 4da:	93 fd       	sbrc	r25, 3
 4dc:	85 91       	lpm	r24, Z+
 4de:	93 ff       	sbrs	r25, 3
 4e0:	81 91       	ld	r24, Z+
 4e2:	6f 01       	movw	r12, r30
 4e4:	81 11       	cpse	r24, r1
 4e6:	c1 cf       	rjmp	.-126    	; 0x46a <vfprintf+0x5c>
 4e8:	98 2f       	mov	r25, r24
 4ea:	9f 7d       	andi	r25, 0xDF	; 223
 4ec:	95 54       	subi	r25, 0x45	; 69
 4ee:	93 30       	cpi	r25, 0x03	; 3
 4f0:	28 f4       	brcc	.+10     	; 0x4fc <vfprintf+0xee>
 4f2:	0c 5f       	subi	r16, 0xFC	; 252
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	ff e3       	ldi	r31, 0x3F	; 63
 4f8:	f9 83       	std	Y+1, r31	; 0x01
 4fa:	0d c0       	rjmp	.+26     	; 0x516 <__stack+0x17>
 4fc:	83 36       	cpi	r24, 0x63	; 99
 4fe:	31 f0       	breq	.+12     	; 0x50c <__stack+0xd>
 500:	83 37       	cpi	r24, 0x73	; 115
 502:	71 f0       	breq	.+28     	; 0x520 <__stack+0x21>
 504:	83 35       	cpi	r24, 0x53	; 83
 506:	09 f0       	breq	.+2      	; 0x50a <__stack+0xb>
 508:	5b c0       	rjmp	.+182    	; 0x5c0 <__stack+0xc1>
 50a:	22 c0       	rjmp	.+68     	; 0x550 <__stack+0x51>
 50c:	f8 01       	movw	r30, r16
 50e:	80 81       	ld	r24, Z
 510:	89 83       	std	Y+1, r24	; 0x01
 512:	0e 5f       	subi	r16, 0xFE	; 254
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	44 24       	eor	r4, r4
 518:	43 94       	inc	r4
 51a:	51 2c       	mov	r5, r1
 51c:	54 01       	movw	r10, r8
 51e:	15 c0       	rjmp	.+42     	; 0x54a <__stack+0x4b>
 520:	38 01       	movw	r6, r16
 522:	f2 e0       	ldi	r31, 0x02	; 2
 524:	6f 0e       	add	r6, r31
 526:	71 1c       	adc	r7, r1
 528:	f8 01       	movw	r30, r16
 52a:	a0 80       	ld	r10, Z
 52c:	b1 80       	ldd	r11, Z+1	; 0x01
 52e:	26 ff       	sbrs	r18, 6
 530:	03 c0       	rjmp	.+6      	; 0x538 <__stack+0x39>
 532:	65 2d       	mov	r22, r5
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	02 c0       	rjmp	.+4      	; 0x53c <__stack+0x3d>
 538:	6f ef       	ldi	r22, 0xFF	; 255
 53a:	7f ef       	ldi	r23, 0xFF	; 255
 53c:	c5 01       	movw	r24, r10
 53e:	2c 87       	std	Y+12, r18	; 0x0c
 540:	0e 94 2e 05 	call	0xa5c	; 0xa5c <strnlen>
 544:	2c 01       	movw	r4, r24
 546:	83 01       	movw	r16, r6
 548:	2c 85       	ldd	r18, Y+12	; 0x0c
 54a:	2f 77       	andi	r18, 0x7F	; 127
 54c:	22 2e       	mov	r2, r18
 54e:	17 c0       	rjmp	.+46     	; 0x57e <__stack+0x7f>
 550:	38 01       	movw	r6, r16
 552:	f2 e0       	ldi	r31, 0x02	; 2
 554:	6f 0e       	add	r6, r31
 556:	71 1c       	adc	r7, r1
 558:	f8 01       	movw	r30, r16
 55a:	a0 80       	ld	r10, Z
 55c:	b1 80       	ldd	r11, Z+1	; 0x01
 55e:	26 ff       	sbrs	r18, 6
 560:	03 c0       	rjmp	.+6      	; 0x568 <__stack+0x69>
 562:	65 2d       	mov	r22, r5
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <__stack+0x6d>
 568:	6f ef       	ldi	r22, 0xFF	; 255
 56a:	7f ef       	ldi	r23, 0xFF	; 255
 56c:	c5 01       	movw	r24, r10
 56e:	2c 87       	std	Y+12, r18	; 0x0c
 570:	0e 94 1c 05 	call	0xa38	; 0xa38 <strnlen_P>
 574:	2c 01       	movw	r4, r24
 576:	2c 85       	ldd	r18, Y+12	; 0x0c
 578:	20 68       	ori	r18, 0x80	; 128
 57a:	22 2e       	mov	r2, r18
 57c:	83 01       	movw	r16, r6
 57e:	23 fc       	sbrc	r2, 3
 580:	1b c0       	rjmp	.+54     	; 0x5b8 <__stack+0xb9>
 582:	83 2d       	mov	r24, r3
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	48 16       	cp	r4, r24
 588:	59 06       	cpc	r5, r25
 58a:	b0 f4       	brcc	.+44     	; 0x5b8 <__stack+0xb9>
 58c:	b7 01       	movw	r22, r14
 58e:	80 e2       	ldi	r24, 0x20	; 32
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 596:	3a 94       	dec	r3
 598:	f4 cf       	rjmp	.-24     	; 0x582 <__stack+0x83>
 59a:	f5 01       	movw	r30, r10
 59c:	27 fc       	sbrc	r2, 7
 59e:	85 91       	lpm	r24, Z+
 5a0:	27 fe       	sbrs	r2, 7
 5a2:	81 91       	ld	r24, Z+
 5a4:	5f 01       	movw	r10, r30
 5a6:	b7 01       	movw	r22, r14
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 5ae:	31 10       	cpse	r3, r1
 5b0:	3a 94       	dec	r3
 5b2:	f1 e0       	ldi	r31, 0x01	; 1
 5b4:	4f 1a       	sub	r4, r31
 5b6:	51 08       	sbc	r5, r1
 5b8:	41 14       	cp	r4, r1
 5ba:	51 04       	cpc	r5, r1
 5bc:	71 f7       	brne	.-36     	; 0x59a <__stack+0x9b>
 5be:	e5 c0       	rjmp	.+458    	; 0x78a <__stack+0x28b>
 5c0:	84 36       	cpi	r24, 0x64	; 100
 5c2:	11 f0       	breq	.+4      	; 0x5c8 <__stack+0xc9>
 5c4:	89 36       	cpi	r24, 0x69	; 105
 5c6:	39 f5       	brne	.+78     	; 0x616 <__stack+0x117>
 5c8:	f8 01       	movw	r30, r16
 5ca:	27 ff       	sbrs	r18, 7
 5cc:	07 c0       	rjmp	.+14     	; 0x5dc <__stack+0xdd>
 5ce:	60 81       	ld	r22, Z
 5d0:	71 81       	ldd	r23, Z+1	; 0x01
 5d2:	82 81       	ldd	r24, Z+2	; 0x02
 5d4:	93 81       	ldd	r25, Z+3	; 0x03
 5d6:	0c 5f       	subi	r16, 0xFC	; 252
 5d8:	1f 4f       	sbci	r17, 0xFF	; 255
 5da:	08 c0       	rjmp	.+16     	; 0x5ec <__stack+0xed>
 5dc:	60 81       	ld	r22, Z
 5de:	71 81       	ldd	r23, Z+1	; 0x01
 5e0:	88 27       	eor	r24, r24
 5e2:	77 fd       	sbrc	r23, 7
 5e4:	80 95       	com	r24
 5e6:	98 2f       	mov	r25, r24
 5e8:	0e 5f       	subi	r16, 0xFE	; 254
 5ea:	1f 4f       	sbci	r17, 0xFF	; 255
 5ec:	2f 76       	andi	r18, 0x6F	; 111
 5ee:	b2 2e       	mov	r11, r18
 5f0:	97 ff       	sbrs	r25, 7
 5f2:	09 c0       	rjmp	.+18     	; 0x606 <__stack+0x107>
 5f4:	90 95       	com	r25
 5f6:	80 95       	com	r24
 5f8:	70 95       	com	r23
 5fa:	61 95       	neg	r22
 5fc:	7f 4f       	sbci	r23, 0xFF	; 255
 5fe:	8f 4f       	sbci	r24, 0xFF	; 255
 600:	9f 4f       	sbci	r25, 0xFF	; 255
 602:	20 68       	ori	r18, 0x80	; 128
 604:	b2 2e       	mov	r11, r18
 606:	2a e0       	ldi	r18, 0x0A	; 10
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	a4 01       	movw	r20, r8
 60c:	0e 94 6b 05 	call	0xad6	; 0xad6 <__ultoa_invert>
 610:	a8 2e       	mov	r10, r24
 612:	a8 18       	sub	r10, r8
 614:	44 c0       	rjmp	.+136    	; 0x69e <__stack+0x19f>
 616:	85 37       	cpi	r24, 0x75	; 117
 618:	29 f4       	brne	.+10     	; 0x624 <__stack+0x125>
 61a:	2f 7e       	andi	r18, 0xEF	; 239
 61c:	b2 2e       	mov	r11, r18
 61e:	2a e0       	ldi	r18, 0x0A	; 10
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	25 c0       	rjmp	.+74     	; 0x66e <__stack+0x16f>
 624:	f2 2f       	mov	r31, r18
 626:	f9 7f       	andi	r31, 0xF9	; 249
 628:	bf 2e       	mov	r11, r31
 62a:	8f 36       	cpi	r24, 0x6F	; 111
 62c:	c1 f0       	breq	.+48     	; 0x65e <__stack+0x15f>
 62e:	18 f4       	brcc	.+6      	; 0x636 <__stack+0x137>
 630:	88 35       	cpi	r24, 0x58	; 88
 632:	79 f0       	breq	.+30     	; 0x652 <__stack+0x153>
 634:	b4 c0       	rjmp	.+360    	; 0x79e <__stack+0x29f>
 636:	80 37       	cpi	r24, 0x70	; 112
 638:	19 f0       	breq	.+6      	; 0x640 <__stack+0x141>
 63a:	88 37       	cpi	r24, 0x78	; 120
 63c:	21 f0       	breq	.+8      	; 0x646 <__stack+0x147>
 63e:	af c0       	rjmp	.+350    	; 0x79e <__stack+0x29f>
 640:	2f 2f       	mov	r18, r31
 642:	20 61       	ori	r18, 0x10	; 16
 644:	b2 2e       	mov	r11, r18
 646:	b4 fe       	sbrs	r11, 4
 648:	0d c0       	rjmp	.+26     	; 0x664 <__stack+0x165>
 64a:	8b 2d       	mov	r24, r11
 64c:	84 60       	ori	r24, 0x04	; 4
 64e:	b8 2e       	mov	r11, r24
 650:	09 c0       	rjmp	.+18     	; 0x664 <__stack+0x165>
 652:	24 ff       	sbrs	r18, 4
 654:	0a c0       	rjmp	.+20     	; 0x66a <__stack+0x16b>
 656:	9f 2f       	mov	r25, r31
 658:	96 60       	ori	r25, 0x06	; 6
 65a:	b9 2e       	mov	r11, r25
 65c:	06 c0       	rjmp	.+12     	; 0x66a <__stack+0x16b>
 65e:	28 e0       	ldi	r18, 0x08	; 8
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	05 c0       	rjmp	.+10     	; 0x66e <__stack+0x16f>
 664:	20 e1       	ldi	r18, 0x10	; 16
 666:	30 e0       	ldi	r19, 0x00	; 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <__stack+0x16f>
 66a:	20 e1       	ldi	r18, 0x10	; 16
 66c:	32 e0       	ldi	r19, 0x02	; 2
 66e:	f8 01       	movw	r30, r16
 670:	b7 fe       	sbrs	r11, 7
 672:	07 c0       	rjmp	.+14     	; 0x682 <__stack+0x183>
 674:	60 81       	ld	r22, Z
 676:	71 81       	ldd	r23, Z+1	; 0x01
 678:	82 81       	ldd	r24, Z+2	; 0x02
 67a:	93 81       	ldd	r25, Z+3	; 0x03
 67c:	0c 5f       	subi	r16, 0xFC	; 252
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	06 c0       	rjmp	.+12     	; 0x68e <__stack+0x18f>
 682:	60 81       	ld	r22, Z
 684:	71 81       	ldd	r23, Z+1	; 0x01
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 5f       	subi	r16, 0xFE	; 254
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	a4 01       	movw	r20, r8
 690:	0e 94 6b 05 	call	0xad6	; 0xad6 <__ultoa_invert>
 694:	a8 2e       	mov	r10, r24
 696:	a8 18       	sub	r10, r8
 698:	fb 2d       	mov	r31, r11
 69a:	ff 77       	andi	r31, 0x7F	; 127
 69c:	bf 2e       	mov	r11, r31
 69e:	b6 fe       	sbrs	r11, 6
 6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <__stack+0x1b9>
 6a2:	2b 2d       	mov	r18, r11
 6a4:	2e 7f       	andi	r18, 0xFE	; 254
 6a6:	a5 14       	cp	r10, r5
 6a8:	50 f4       	brcc	.+20     	; 0x6be <__stack+0x1bf>
 6aa:	b4 fe       	sbrs	r11, 4
 6ac:	0a c0       	rjmp	.+20     	; 0x6c2 <__stack+0x1c3>
 6ae:	b2 fc       	sbrc	r11, 2
 6b0:	08 c0       	rjmp	.+16     	; 0x6c2 <__stack+0x1c3>
 6b2:	2b 2d       	mov	r18, r11
 6b4:	2e 7e       	andi	r18, 0xEE	; 238
 6b6:	05 c0       	rjmp	.+10     	; 0x6c2 <__stack+0x1c3>
 6b8:	7a 2c       	mov	r7, r10
 6ba:	2b 2d       	mov	r18, r11
 6bc:	03 c0       	rjmp	.+6      	; 0x6c4 <__stack+0x1c5>
 6be:	7a 2c       	mov	r7, r10
 6c0:	01 c0       	rjmp	.+2      	; 0x6c4 <__stack+0x1c5>
 6c2:	75 2c       	mov	r7, r5
 6c4:	24 ff       	sbrs	r18, 4
 6c6:	0d c0       	rjmp	.+26     	; 0x6e2 <__stack+0x1e3>
 6c8:	fe 01       	movw	r30, r28
 6ca:	ea 0d       	add	r30, r10
 6cc:	f1 1d       	adc	r31, r1
 6ce:	80 81       	ld	r24, Z
 6d0:	80 33       	cpi	r24, 0x30	; 48
 6d2:	11 f4       	brne	.+4      	; 0x6d8 <__stack+0x1d9>
 6d4:	29 7e       	andi	r18, 0xE9	; 233
 6d6:	09 c0       	rjmp	.+18     	; 0x6ea <__stack+0x1eb>
 6d8:	22 ff       	sbrs	r18, 2
 6da:	06 c0       	rjmp	.+12     	; 0x6e8 <__stack+0x1e9>
 6dc:	73 94       	inc	r7
 6de:	73 94       	inc	r7
 6e0:	04 c0       	rjmp	.+8      	; 0x6ea <__stack+0x1eb>
 6e2:	82 2f       	mov	r24, r18
 6e4:	86 78       	andi	r24, 0x86	; 134
 6e6:	09 f0       	breq	.+2      	; 0x6ea <__stack+0x1eb>
 6e8:	73 94       	inc	r7
 6ea:	23 fd       	sbrc	r18, 3
 6ec:	13 c0       	rjmp	.+38     	; 0x714 <__stack+0x215>
 6ee:	20 ff       	sbrs	r18, 0
 6f0:	06 c0       	rjmp	.+12     	; 0x6fe <__stack+0x1ff>
 6f2:	5a 2c       	mov	r5, r10
 6f4:	73 14       	cp	r7, r3
 6f6:	18 f4       	brcc	.+6      	; 0x6fe <__stack+0x1ff>
 6f8:	53 0c       	add	r5, r3
 6fa:	57 18       	sub	r5, r7
 6fc:	73 2c       	mov	r7, r3
 6fe:	73 14       	cp	r7, r3
 700:	68 f4       	brcc	.+26     	; 0x71c <__stack+0x21d>
 702:	b7 01       	movw	r22, r14
 704:	80 e2       	ldi	r24, 0x20	; 32
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	2c 87       	std	Y+12, r18	; 0x0c
 70a:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 70e:	73 94       	inc	r7
 710:	2c 85       	ldd	r18, Y+12	; 0x0c
 712:	f5 cf       	rjmp	.-22     	; 0x6fe <__stack+0x1ff>
 714:	73 14       	cp	r7, r3
 716:	10 f4       	brcc	.+4      	; 0x71c <__stack+0x21d>
 718:	37 18       	sub	r3, r7
 71a:	01 c0       	rjmp	.+2      	; 0x71e <__stack+0x21f>
 71c:	31 2c       	mov	r3, r1
 71e:	24 ff       	sbrs	r18, 4
 720:	12 c0       	rjmp	.+36     	; 0x746 <__stack+0x247>
 722:	b7 01       	movw	r22, r14
 724:	80 e3       	ldi	r24, 0x30	; 48
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	2c 87       	std	Y+12, r18	; 0x0c
 72a:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 72e:	2c 85       	ldd	r18, Y+12	; 0x0c
 730:	22 ff       	sbrs	r18, 2
 732:	17 c0       	rjmp	.+46     	; 0x762 <__stack+0x263>
 734:	21 ff       	sbrs	r18, 1
 736:	03 c0       	rjmp	.+6      	; 0x73e <__stack+0x23f>
 738:	88 e5       	ldi	r24, 0x58	; 88
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	02 c0       	rjmp	.+4      	; 0x742 <__stack+0x243>
 73e:	88 e7       	ldi	r24, 0x78	; 120
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	b7 01       	movw	r22, r14
 744:	0c c0       	rjmp	.+24     	; 0x75e <__stack+0x25f>
 746:	82 2f       	mov	r24, r18
 748:	86 78       	andi	r24, 0x86	; 134
 74a:	59 f0       	breq	.+22     	; 0x762 <__stack+0x263>
 74c:	21 fd       	sbrc	r18, 1
 74e:	02 c0       	rjmp	.+4      	; 0x754 <__stack+0x255>
 750:	80 e2       	ldi	r24, 0x20	; 32
 752:	01 c0       	rjmp	.+2      	; 0x756 <__stack+0x257>
 754:	8b e2       	ldi	r24, 0x2B	; 43
 756:	27 fd       	sbrc	r18, 7
 758:	8d e2       	ldi	r24, 0x2D	; 45
 75a:	b7 01       	movw	r22, r14
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 762:	a5 14       	cp	r10, r5
 764:	38 f4       	brcc	.+14     	; 0x774 <__stack+0x275>
 766:	b7 01       	movw	r22, r14
 768:	80 e3       	ldi	r24, 0x30	; 48
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 770:	5a 94       	dec	r5
 772:	f7 cf       	rjmp	.-18     	; 0x762 <__stack+0x263>
 774:	aa 94       	dec	r10
 776:	f4 01       	movw	r30, r8
 778:	ea 0d       	add	r30, r10
 77a:	f1 1d       	adc	r31, r1
 77c:	80 81       	ld	r24, Z
 77e:	b7 01       	movw	r22, r14
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 786:	a1 10       	cpse	r10, r1
 788:	f5 cf       	rjmp	.-22     	; 0x774 <__stack+0x275>
 78a:	33 20       	and	r3, r3
 78c:	09 f4       	brne	.+2      	; 0x790 <__stack+0x291>
 78e:	51 ce       	rjmp	.-862    	; 0x432 <vfprintf+0x24>
 790:	b7 01       	movw	r22, r14
 792:	80 e2       	ldi	r24, 0x20	; 32
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 39 05 	call	0xa72	; 0xa72 <fputc>
 79a:	3a 94       	dec	r3
 79c:	f6 cf       	rjmp	.-20     	; 0x78a <__stack+0x28b>
 79e:	f7 01       	movw	r30, r14
 7a0:	86 81       	ldd	r24, Z+6	; 0x06
 7a2:	97 81       	ldd	r25, Z+7	; 0x07
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <__stack+0x2ab>
 7a6:	8f ef       	ldi	r24, 0xFF	; 255
 7a8:	9f ef       	ldi	r25, 0xFF	; 255
 7aa:	2c 96       	adiw	r28, 0x0c	; 12
 7ac:	e2 e1       	ldi	r30, 0x12	; 18
 7ae:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__epilogue_restores__>

000007b2 <calloc>:
 7b2:	0f 93       	push	r16
 7b4:	1f 93       	push	r17
 7b6:	cf 93       	push	r28
 7b8:	df 93       	push	r29
 7ba:	86 9f       	mul	r24, r22
 7bc:	80 01       	movw	r16, r0
 7be:	87 9f       	mul	r24, r23
 7c0:	10 0d       	add	r17, r0
 7c2:	96 9f       	mul	r25, r22
 7c4:	10 0d       	add	r17, r0
 7c6:	11 24       	eor	r1, r1
 7c8:	c8 01       	movw	r24, r16
 7ca:	0e 94 f5 03 	call	0x7ea	; 0x7ea <malloc>
 7ce:	ec 01       	movw	r28, r24
 7d0:	00 97       	sbiw	r24, 0x00	; 0
 7d2:	29 f0       	breq	.+10     	; 0x7de <calloc+0x2c>
 7d4:	a8 01       	movw	r20, r16
 7d6:	60 e0       	ldi	r22, 0x00	; 0
 7d8:	70 e0       	ldi	r23, 0x00	; 0
 7da:	0e 94 27 05 	call	0xa4e	; 0xa4e <memset>
 7de:	ce 01       	movw	r24, r28
 7e0:	df 91       	pop	r29
 7e2:	cf 91       	pop	r28
 7e4:	1f 91       	pop	r17
 7e6:	0f 91       	pop	r16
 7e8:	08 95       	ret

000007ea <malloc>:
 7ea:	cf 93       	push	r28
 7ec:	df 93       	push	r29
 7ee:	82 30       	cpi	r24, 0x02	; 2
 7f0:	91 05       	cpc	r25, r1
 7f2:	10 f4       	brcc	.+4      	; 0x7f8 <malloc+0xe>
 7f4:	82 e0       	ldi	r24, 0x02	; 2
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	e0 91 87 01 	lds	r30, 0x0187
 7fc:	f0 91 88 01 	lds	r31, 0x0188
 800:	20 e0       	ldi	r18, 0x00	; 0
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	a0 e0       	ldi	r26, 0x00	; 0
 806:	b0 e0       	ldi	r27, 0x00	; 0
 808:	30 97       	sbiw	r30, 0x00	; 0
 80a:	39 f1       	breq	.+78     	; 0x85a <malloc+0x70>
 80c:	40 81       	ld	r20, Z
 80e:	51 81       	ldd	r21, Z+1	; 0x01
 810:	48 17       	cp	r20, r24
 812:	59 07       	cpc	r21, r25
 814:	b8 f0       	brcs	.+46     	; 0x844 <malloc+0x5a>
 816:	48 17       	cp	r20, r24
 818:	59 07       	cpc	r21, r25
 81a:	71 f4       	brne	.+28     	; 0x838 <malloc+0x4e>
 81c:	82 81       	ldd	r24, Z+2	; 0x02
 81e:	93 81       	ldd	r25, Z+3	; 0x03
 820:	10 97       	sbiw	r26, 0x00	; 0
 822:	29 f0       	breq	.+10     	; 0x82e <malloc+0x44>
 824:	13 96       	adiw	r26, 0x03	; 3
 826:	9c 93       	st	X, r25
 828:	8e 93       	st	-X, r24
 82a:	12 97       	sbiw	r26, 0x02	; 2
 82c:	2c c0       	rjmp	.+88     	; 0x886 <malloc+0x9c>
 82e:	90 93 88 01 	sts	0x0188, r25
 832:	80 93 87 01 	sts	0x0187, r24
 836:	27 c0       	rjmp	.+78     	; 0x886 <malloc+0x9c>
 838:	21 15       	cp	r18, r1
 83a:	31 05       	cpc	r19, r1
 83c:	31 f0       	breq	.+12     	; 0x84a <malloc+0x60>
 83e:	42 17       	cp	r20, r18
 840:	53 07       	cpc	r21, r19
 842:	18 f0       	brcs	.+6      	; 0x84a <malloc+0x60>
 844:	a9 01       	movw	r20, r18
 846:	db 01       	movw	r26, r22
 848:	01 c0       	rjmp	.+2      	; 0x84c <malloc+0x62>
 84a:	ef 01       	movw	r28, r30
 84c:	9a 01       	movw	r18, r20
 84e:	bd 01       	movw	r22, r26
 850:	df 01       	movw	r26, r30
 852:	02 80       	ldd	r0, Z+2	; 0x02
 854:	f3 81       	ldd	r31, Z+3	; 0x03
 856:	e0 2d       	mov	r30, r0
 858:	d7 cf       	rjmp	.-82     	; 0x808 <malloc+0x1e>
 85a:	21 15       	cp	r18, r1
 85c:	31 05       	cpc	r19, r1
 85e:	f9 f0       	breq	.+62     	; 0x89e <malloc+0xb4>
 860:	28 1b       	sub	r18, r24
 862:	39 0b       	sbc	r19, r25
 864:	24 30       	cpi	r18, 0x04	; 4
 866:	31 05       	cpc	r19, r1
 868:	80 f4       	brcc	.+32     	; 0x88a <malloc+0xa0>
 86a:	8a 81       	ldd	r24, Y+2	; 0x02
 86c:	9b 81       	ldd	r25, Y+3	; 0x03
 86e:	61 15       	cp	r22, r1
 870:	71 05       	cpc	r23, r1
 872:	21 f0       	breq	.+8      	; 0x87c <malloc+0x92>
 874:	fb 01       	movw	r30, r22
 876:	93 83       	std	Z+3, r25	; 0x03
 878:	82 83       	std	Z+2, r24	; 0x02
 87a:	04 c0       	rjmp	.+8      	; 0x884 <malloc+0x9a>
 87c:	90 93 88 01 	sts	0x0188, r25
 880:	80 93 87 01 	sts	0x0187, r24
 884:	fe 01       	movw	r30, r28
 886:	32 96       	adiw	r30, 0x02	; 2
 888:	44 c0       	rjmp	.+136    	; 0x912 <malloc+0x128>
 88a:	fe 01       	movw	r30, r28
 88c:	e2 0f       	add	r30, r18
 88e:	f3 1f       	adc	r31, r19
 890:	81 93       	st	Z+, r24
 892:	91 93       	st	Z+, r25
 894:	22 50       	subi	r18, 0x02	; 2
 896:	31 09       	sbc	r19, r1
 898:	39 83       	std	Y+1, r19	; 0x01
 89a:	28 83       	st	Y, r18
 89c:	3a c0       	rjmp	.+116    	; 0x912 <malloc+0x128>
 89e:	20 91 85 01 	lds	r18, 0x0185
 8a2:	30 91 86 01 	lds	r19, 0x0186
 8a6:	23 2b       	or	r18, r19
 8a8:	41 f4       	brne	.+16     	; 0x8ba <malloc+0xd0>
 8aa:	20 91 02 01 	lds	r18, 0x0102
 8ae:	30 91 03 01 	lds	r19, 0x0103
 8b2:	30 93 86 01 	sts	0x0186, r19
 8b6:	20 93 85 01 	sts	0x0185, r18
 8ba:	20 91 00 01 	lds	r18, 0x0100
 8be:	30 91 01 01 	lds	r19, 0x0101
 8c2:	21 15       	cp	r18, r1
 8c4:	31 05       	cpc	r19, r1
 8c6:	41 f4       	brne	.+16     	; 0x8d8 <malloc+0xee>
 8c8:	2d b7       	in	r18, 0x3d	; 61
 8ca:	3e b7       	in	r19, 0x3e	; 62
 8cc:	40 91 04 01 	lds	r20, 0x0104
 8d0:	50 91 05 01 	lds	r21, 0x0105
 8d4:	24 1b       	sub	r18, r20
 8d6:	35 0b       	sbc	r19, r21
 8d8:	e0 91 85 01 	lds	r30, 0x0185
 8dc:	f0 91 86 01 	lds	r31, 0x0186
 8e0:	e2 17       	cp	r30, r18
 8e2:	f3 07       	cpc	r31, r19
 8e4:	a0 f4       	brcc	.+40     	; 0x90e <malloc+0x124>
 8e6:	2e 1b       	sub	r18, r30
 8e8:	3f 0b       	sbc	r19, r31
 8ea:	28 17       	cp	r18, r24
 8ec:	39 07       	cpc	r19, r25
 8ee:	78 f0       	brcs	.+30     	; 0x90e <malloc+0x124>
 8f0:	ac 01       	movw	r20, r24
 8f2:	4e 5f       	subi	r20, 0xFE	; 254
 8f4:	5f 4f       	sbci	r21, 0xFF	; 255
 8f6:	24 17       	cp	r18, r20
 8f8:	35 07       	cpc	r19, r21
 8fa:	48 f0       	brcs	.+18     	; 0x90e <malloc+0x124>
 8fc:	4e 0f       	add	r20, r30
 8fe:	5f 1f       	adc	r21, r31
 900:	50 93 86 01 	sts	0x0186, r21
 904:	40 93 85 01 	sts	0x0185, r20
 908:	81 93       	st	Z+, r24
 90a:	91 93       	st	Z+, r25
 90c:	02 c0       	rjmp	.+4      	; 0x912 <malloc+0x128>
 90e:	e0 e0       	ldi	r30, 0x00	; 0
 910:	f0 e0       	ldi	r31, 0x00	; 0
 912:	cf 01       	movw	r24, r30
 914:	df 91       	pop	r29
 916:	cf 91       	pop	r28
 918:	08 95       	ret

0000091a <free>:
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	00 97       	sbiw	r24, 0x00	; 0
 920:	09 f4       	brne	.+2      	; 0x924 <free+0xa>
 922:	87 c0       	rjmp	.+270    	; 0xa32 <free+0x118>
 924:	fc 01       	movw	r30, r24
 926:	32 97       	sbiw	r30, 0x02	; 2
 928:	13 82       	std	Z+3, r1	; 0x03
 92a:	12 82       	std	Z+2, r1	; 0x02
 92c:	c0 91 87 01 	lds	r28, 0x0187
 930:	d0 91 88 01 	lds	r29, 0x0188
 934:	20 97       	sbiw	r28, 0x00	; 0
 936:	81 f4       	brne	.+32     	; 0x958 <free+0x3e>
 938:	20 81       	ld	r18, Z
 93a:	31 81       	ldd	r19, Z+1	; 0x01
 93c:	28 0f       	add	r18, r24
 93e:	39 1f       	adc	r19, r25
 940:	80 91 85 01 	lds	r24, 0x0185
 944:	90 91 86 01 	lds	r25, 0x0186
 948:	82 17       	cp	r24, r18
 94a:	93 07       	cpc	r25, r19
 94c:	79 f5       	brne	.+94     	; 0x9ac <free+0x92>
 94e:	f0 93 86 01 	sts	0x0186, r31
 952:	e0 93 85 01 	sts	0x0185, r30
 956:	6d c0       	rjmp	.+218    	; 0xa32 <free+0x118>
 958:	de 01       	movw	r26, r28
 95a:	20 e0       	ldi	r18, 0x00	; 0
 95c:	30 e0       	ldi	r19, 0x00	; 0
 95e:	ae 17       	cp	r26, r30
 960:	bf 07       	cpc	r27, r31
 962:	50 f4       	brcc	.+20     	; 0x978 <free+0x5e>
 964:	12 96       	adiw	r26, 0x02	; 2
 966:	4d 91       	ld	r20, X+
 968:	5c 91       	ld	r21, X
 96a:	13 97       	sbiw	r26, 0x03	; 3
 96c:	9d 01       	movw	r18, r26
 96e:	41 15       	cp	r20, r1
 970:	51 05       	cpc	r21, r1
 972:	09 f1       	breq	.+66     	; 0x9b6 <free+0x9c>
 974:	da 01       	movw	r26, r20
 976:	f3 cf       	rjmp	.-26     	; 0x95e <free+0x44>
 978:	b3 83       	std	Z+3, r27	; 0x03
 97a:	a2 83       	std	Z+2, r26	; 0x02
 97c:	40 81       	ld	r20, Z
 97e:	51 81       	ldd	r21, Z+1	; 0x01
 980:	84 0f       	add	r24, r20
 982:	95 1f       	adc	r25, r21
 984:	8a 17       	cp	r24, r26
 986:	9b 07       	cpc	r25, r27
 988:	71 f4       	brne	.+28     	; 0x9a6 <free+0x8c>
 98a:	8d 91       	ld	r24, X+
 98c:	9c 91       	ld	r25, X
 98e:	11 97       	sbiw	r26, 0x01	; 1
 990:	84 0f       	add	r24, r20
 992:	95 1f       	adc	r25, r21
 994:	02 96       	adiw	r24, 0x02	; 2
 996:	91 83       	std	Z+1, r25	; 0x01
 998:	80 83       	st	Z, r24
 99a:	12 96       	adiw	r26, 0x02	; 2
 99c:	8d 91       	ld	r24, X+
 99e:	9c 91       	ld	r25, X
 9a0:	13 97       	sbiw	r26, 0x03	; 3
 9a2:	93 83       	std	Z+3, r25	; 0x03
 9a4:	82 83       	std	Z+2, r24	; 0x02
 9a6:	21 15       	cp	r18, r1
 9a8:	31 05       	cpc	r19, r1
 9aa:	29 f4       	brne	.+10     	; 0x9b6 <free+0x9c>
 9ac:	f0 93 88 01 	sts	0x0188, r31
 9b0:	e0 93 87 01 	sts	0x0187, r30
 9b4:	3e c0       	rjmp	.+124    	; 0xa32 <free+0x118>
 9b6:	d9 01       	movw	r26, r18
 9b8:	13 96       	adiw	r26, 0x03	; 3
 9ba:	fc 93       	st	X, r31
 9bc:	ee 93       	st	-X, r30
 9be:	12 97       	sbiw	r26, 0x02	; 2
 9c0:	4d 91       	ld	r20, X+
 9c2:	5d 91       	ld	r21, X+
 9c4:	a4 0f       	add	r26, r20
 9c6:	b5 1f       	adc	r27, r21
 9c8:	ea 17       	cp	r30, r26
 9ca:	fb 07       	cpc	r31, r27
 9cc:	79 f4       	brne	.+30     	; 0x9ec <free+0xd2>
 9ce:	80 81       	ld	r24, Z
 9d0:	91 81       	ldd	r25, Z+1	; 0x01
 9d2:	84 0f       	add	r24, r20
 9d4:	95 1f       	adc	r25, r21
 9d6:	02 96       	adiw	r24, 0x02	; 2
 9d8:	d9 01       	movw	r26, r18
 9da:	11 96       	adiw	r26, 0x01	; 1
 9dc:	9c 93       	st	X, r25
 9de:	8e 93       	st	-X, r24
 9e0:	82 81       	ldd	r24, Z+2	; 0x02
 9e2:	93 81       	ldd	r25, Z+3	; 0x03
 9e4:	13 96       	adiw	r26, 0x03	; 3
 9e6:	9c 93       	st	X, r25
 9e8:	8e 93       	st	-X, r24
 9ea:	12 97       	sbiw	r26, 0x02	; 2
 9ec:	e0 e0       	ldi	r30, 0x00	; 0
 9ee:	f0 e0       	ldi	r31, 0x00	; 0
 9f0:	8a 81       	ldd	r24, Y+2	; 0x02
 9f2:	9b 81       	ldd	r25, Y+3	; 0x03
 9f4:	00 97       	sbiw	r24, 0x00	; 0
 9f6:	19 f0       	breq	.+6      	; 0x9fe <free+0xe4>
 9f8:	fe 01       	movw	r30, r28
 9fa:	ec 01       	movw	r28, r24
 9fc:	f9 cf       	rjmp	.-14     	; 0x9f0 <free+0xd6>
 9fe:	ce 01       	movw	r24, r28
 a00:	02 96       	adiw	r24, 0x02	; 2
 a02:	28 81       	ld	r18, Y
 a04:	39 81       	ldd	r19, Y+1	; 0x01
 a06:	82 0f       	add	r24, r18
 a08:	93 1f       	adc	r25, r19
 a0a:	20 91 85 01 	lds	r18, 0x0185
 a0e:	30 91 86 01 	lds	r19, 0x0186
 a12:	28 17       	cp	r18, r24
 a14:	39 07       	cpc	r19, r25
 a16:	69 f4       	brne	.+26     	; 0xa32 <free+0x118>
 a18:	30 97       	sbiw	r30, 0x00	; 0
 a1a:	29 f4       	brne	.+10     	; 0xa26 <free+0x10c>
 a1c:	10 92 88 01 	sts	0x0188, r1
 a20:	10 92 87 01 	sts	0x0187, r1
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <free+0x110>
 a26:	13 82       	std	Z+3, r1	; 0x03
 a28:	12 82       	std	Z+2, r1	; 0x02
 a2a:	d0 93 86 01 	sts	0x0186, r29
 a2e:	c0 93 85 01 	sts	0x0185, r28
 a32:	df 91       	pop	r29
 a34:	cf 91       	pop	r28
 a36:	08 95       	ret

00000a38 <strnlen_P>:
 a38:	fc 01       	movw	r30, r24
 a3a:	05 90       	lpm	r0, Z+
 a3c:	61 50       	subi	r22, 0x01	; 1
 a3e:	70 40       	sbci	r23, 0x00	; 0
 a40:	01 10       	cpse	r0, r1
 a42:	d8 f7       	brcc	.-10     	; 0xa3a <strnlen_P+0x2>
 a44:	80 95       	com	r24
 a46:	90 95       	com	r25
 a48:	8e 0f       	add	r24, r30
 a4a:	9f 1f       	adc	r25, r31
 a4c:	08 95       	ret

00000a4e <memset>:
 a4e:	dc 01       	movw	r26, r24
 a50:	01 c0       	rjmp	.+2      	; 0xa54 <memset+0x6>
 a52:	6d 93       	st	X+, r22
 a54:	41 50       	subi	r20, 0x01	; 1
 a56:	50 40       	sbci	r21, 0x00	; 0
 a58:	e0 f7       	brcc	.-8      	; 0xa52 <memset+0x4>
 a5a:	08 95       	ret

00000a5c <strnlen>:
 a5c:	fc 01       	movw	r30, r24
 a5e:	61 50       	subi	r22, 0x01	; 1
 a60:	70 40       	sbci	r23, 0x00	; 0
 a62:	01 90       	ld	r0, Z+
 a64:	01 10       	cpse	r0, r1
 a66:	d8 f7       	brcc	.-10     	; 0xa5e <strnlen+0x2>
 a68:	80 95       	com	r24
 a6a:	90 95       	com	r25
 a6c:	8e 0f       	add	r24, r30
 a6e:	9f 1f       	adc	r25, r31
 a70:	08 95       	ret

00000a72 <fputc>:
 a72:	0f 93       	push	r16
 a74:	1f 93       	push	r17
 a76:	cf 93       	push	r28
 a78:	df 93       	push	r29
 a7a:	18 2f       	mov	r17, r24
 a7c:	09 2f       	mov	r16, r25
 a7e:	eb 01       	movw	r28, r22
 a80:	8b 81       	ldd	r24, Y+3	; 0x03
 a82:	81 fd       	sbrc	r24, 1
 a84:	03 c0       	rjmp	.+6      	; 0xa8c <fputc+0x1a>
 a86:	8f ef       	ldi	r24, 0xFF	; 255
 a88:	9f ef       	ldi	r25, 0xFF	; 255
 a8a:	20 c0       	rjmp	.+64     	; 0xacc <fputc+0x5a>
 a8c:	82 ff       	sbrs	r24, 2
 a8e:	10 c0       	rjmp	.+32     	; 0xab0 <fputc+0x3e>
 a90:	4e 81       	ldd	r20, Y+6	; 0x06
 a92:	5f 81       	ldd	r21, Y+7	; 0x07
 a94:	2c 81       	ldd	r18, Y+4	; 0x04
 a96:	3d 81       	ldd	r19, Y+5	; 0x05
 a98:	42 17       	cp	r20, r18
 a9a:	53 07       	cpc	r21, r19
 a9c:	7c f4       	brge	.+30     	; 0xabc <fputc+0x4a>
 a9e:	e8 81       	ld	r30, Y
 aa0:	f9 81       	ldd	r31, Y+1	; 0x01
 aa2:	9f 01       	movw	r18, r30
 aa4:	2f 5f       	subi	r18, 0xFF	; 255
 aa6:	3f 4f       	sbci	r19, 0xFF	; 255
 aa8:	39 83       	std	Y+1, r19	; 0x01
 aaa:	28 83       	st	Y, r18
 aac:	10 83       	st	Z, r17
 aae:	06 c0       	rjmp	.+12     	; 0xabc <fputc+0x4a>
 ab0:	e8 85       	ldd	r30, Y+8	; 0x08
 ab2:	f9 85       	ldd	r31, Y+9	; 0x09
 ab4:	81 2f       	mov	r24, r17
 ab6:	09 95       	icall
 ab8:	89 2b       	or	r24, r25
 aba:	29 f7       	brne	.-54     	; 0xa86 <fputc+0x14>
 abc:	2e 81       	ldd	r18, Y+6	; 0x06
 abe:	3f 81       	ldd	r19, Y+7	; 0x07
 ac0:	2f 5f       	subi	r18, 0xFF	; 255
 ac2:	3f 4f       	sbci	r19, 0xFF	; 255
 ac4:	3f 83       	std	Y+7, r19	; 0x07
 ac6:	2e 83       	std	Y+6, r18	; 0x06
 ac8:	81 2f       	mov	r24, r17
 aca:	90 2f       	mov	r25, r16
 acc:	df 91       	pop	r29
 ace:	cf 91       	pop	r28
 ad0:	1f 91       	pop	r17
 ad2:	0f 91       	pop	r16
 ad4:	08 95       	ret

00000ad6 <__ultoa_invert>:
 ad6:	fa 01       	movw	r30, r20
 ad8:	aa 27       	eor	r26, r26
 ada:	28 30       	cpi	r18, 0x08	; 8
 adc:	51 f1       	breq	.+84     	; 0xb32 <__ultoa_invert+0x5c>
 ade:	20 31       	cpi	r18, 0x10	; 16
 ae0:	81 f1       	breq	.+96     	; 0xb42 <__ultoa_invert+0x6c>
 ae2:	e8 94       	clt
 ae4:	6f 93       	push	r22
 ae6:	6e 7f       	andi	r22, 0xFE	; 254
 ae8:	6e 5f       	subi	r22, 0xFE	; 254
 aea:	7f 4f       	sbci	r23, 0xFF	; 255
 aec:	8f 4f       	sbci	r24, 0xFF	; 255
 aee:	9f 4f       	sbci	r25, 0xFF	; 255
 af0:	af 4f       	sbci	r26, 0xFF	; 255
 af2:	b1 e0       	ldi	r27, 0x01	; 1
 af4:	3e d0       	rcall	.+124    	; 0xb72 <__ultoa_invert+0x9c>
 af6:	b4 e0       	ldi	r27, 0x04	; 4
 af8:	3c d0       	rcall	.+120    	; 0xb72 <__ultoa_invert+0x9c>
 afa:	67 0f       	add	r22, r23
 afc:	78 1f       	adc	r23, r24
 afe:	89 1f       	adc	r24, r25
 b00:	9a 1f       	adc	r25, r26
 b02:	a1 1d       	adc	r26, r1
 b04:	68 0f       	add	r22, r24
 b06:	79 1f       	adc	r23, r25
 b08:	8a 1f       	adc	r24, r26
 b0a:	91 1d       	adc	r25, r1
 b0c:	a1 1d       	adc	r26, r1
 b0e:	6a 0f       	add	r22, r26
 b10:	71 1d       	adc	r23, r1
 b12:	81 1d       	adc	r24, r1
 b14:	91 1d       	adc	r25, r1
 b16:	a1 1d       	adc	r26, r1
 b18:	20 d0       	rcall	.+64     	; 0xb5a <__ultoa_invert+0x84>
 b1a:	09 f4       	brne	.+2      	; 0xb1e <__ultoa_invert+0x48>
 b1c:	68 94       	set
 b1e:	3f 91       	pop	r19
 b20:	2a e0       	ldi	r18, 0x0A	; 10
 b22:	26 9f       	mul	r18, r22
 b24:	11 24       	eor	r1, r1
 b26:	30 19       	sub	r19, r0
 b28:	30 5d       	subi	r19, 0xD0	; 208
 b2a:	31 93       	st	Z+, r19
 b2c:	de f6       	brtc	.-74     	; 0xae4 <__ultoa_invert+0xe>
 b2e:	cf 01       	movw	r24, r30
 b30:	08 95       	ret
 b32:	46 2f       	mov	r20, r22
 b34:	47 70       	andi	r20, 0x07	; 7
 b36:	40 5d       	subi	r20, 0xD0	; 208
 b38:	41 93       	st	Z+, r20
 b3a:	b3 e0       	ldi	r27, 0x03	; 3
 b3c:	0f d0       	rcall	.+30     	; 0xb5c <__ultoa_invert+0x86>
 b3e:	c9 f7       	brne	.-14     	; 0xb32 <__ultoa_invert+0x5c>
 b40:	f6 cf       	rjmp	.-20     	; 0xb2e <__ultoa_invert+0x58>
 b42:	46 2f       	mov	r20, r22
 b44:	4f 70       	andi	r20, 0x0F	; 15
 b46:	40 5d       	subi	r20, 0xD0	; 208
 b48:	4a 33       	cpi	r20, 0x3A	; 58
 b4a:	18 f0       	brcs	.+6      	; 0xb52 <__ultoa_invert+0x7c>
 b4c:	49 5d       	subi	r20, 0xD9	; 217
 b4e:	31 fd       	sbrc	r19, 1
 b50:	40 52       	subi	r20, 0x20	; 32
 b52:	41 93       	st	Z+, r20
 b54:	02 d0       	rcall	.+4      	; 0xb5a <__ultoa_invert+0x84>
 b56:	a9 f7       	brne	.-22     	; 0xb42 <__ultoa_invert+0x6c>
 b58:	ea cf       	rjmp	.-44     	; 0xb2e <__ultoa_invert+0x58>
 b5a:	b4 e0       	ldi	r27, 0x04	; 4
 b5c:	a6 95       	lsr	r26
 b5e:	97 95       	ror	r25
 b60:	87 95       	ror	r24
 b62:	77 95       	ror	r23
 b64:	67 95       	ror	r22
 b66:	ba 95       	dec	r27
 b68:	c9 f7       	brne	.-14     	; 0xb5c <__ultoa_invert+0x86>
 b6a:	00 97       	sbiw	r24, 0x00	; 0
 b6c:	61 05       	cpc	r22, r1
 b6e:	71 05       	cpc	r23, r1
 b70:	08 95       	ret
 b72:	9b 01       	movw	r18, r22
 b74:	ac 01       	movw	r20, r24
 b76:	0a 2e       	mov	r0, r26
 b78:	06 94       	lsr	r0
 b7a:	57 95       	ror	r21
 b7c:	47 95       	ror	r20
 b7e:	37 95       	ror	r19
 b80:	27 95       	ror	r18
 b82:	ba 95       	dec	r27
 b84:	c9 f7       	brne	.-14     	; 0xb78 <__ultoa_invert+0xa2>
 b86:	62 0f       	add	r22, r18
 b88:	73 1f       	adc	r23, r19
 b8a:	84 1f       	adc	r24, r20
 b8c:	95 1f       	adc	r25, r21
 b8e:	a0 1d       	adc	r26, r0
 b90:	08 95       	ret

00000b92 <__prologue_saves__>:
 b92:	2f 92       	push	r2
 b94:	3f 92       	push	r3
 b96:	4f 92       	push	r4
 b98:	5f 92       	push	r5
 b9a:	6f 92       	push	r6
 b9c:	7f 92       	push	r7
 b9e:	8f 92       	push	r8
 ba0:	9f 92       	push	r9
 ba2:	af 92       	push	r10
 ba4:	bf 92       	push	r11
 ba6:	cf 92       	push	r12
 ba8:	df 92       	push	r13
 baa:	ef 92       	push	r14
 bac:	ff 92       	push	r15
 bae:	0f 93       	push	r16
 bb0:	1f 93       	push	r17
 bb2:	cf 93       	push	r28
 bb4:	df 93       	push	r29
 bb6:	cd b7       	in	r28, 0x3d	; 61
 bb8:	de b7       	in	r29, 0x3e	; 62
 bba:	ca 1b       	sub	r28, r26
 bbc:	db 0b       	sbc	r29, r27
 bbe:	0f b6       	in	r0, 0x3f	; 63
 bc0:	f8 94       	cli
 bc2:	de bf       	out	0x3e, r29	; 62
 bc4:	0f be       	out	0x3f, r0	; 63
 bc6:	cd bf       	out	0x3d, r28	; 61
 bc8:	09 94       	ijmp

00000bca <__epilogue_restores__>:
 bca:	2a 88       	ldd	r2, Y+18	; 0x12
 bcc:	39 88       	ldd	r3, Y+17	; 0x11
 bce:	48 88       	ldd	r4, Y+16	; 0x10
 bd0:	5f 84       	ldd	r5, Y+15	; 0x0f
 bd2:	6e 84       	ldd	r6, Y+14	; 0x0e
 bd4:	7d 84       	ldd	r7, Y+13	; 0x0d
 bd6:	8c 84       	ldd	r8, Y+12	; 0x0c
 bd8:	9b 84       	ldd	r9, Y+11	; 0x0b
 bda:	aa 84       	ldd	r10, Y+10	; 0x0a
 bdc:	b9 84       	ldd	r11, Y+9	; 0x09
 bde:	c8 84       	ldd	r12, Y+8	; 0x08
 be0:	df 80       	ldd	r13, Y+7	; 0x07
 be2:	ee 80       	ldd	r14, Y+6	; 0x06
 be4:	fd 80       	ldd	r15, Y+5	; 0x05
 be6:	0c 81       	ldd	r16, Y+4	; 0x04
 be8:	1b 81       	ldd	r17, Y+3	; 0x03
 bea:	aa 81       	ldd	r26, Y+2	; 0x02
 bec:	b9 81       	ldd	r27, Y+1	; 0x01
 bee:	ce 0f       	add	r28, r30
 bf0:	d1 1d       	adc	r29, r1
 bf2:	0f b6       	in	r0, 0x3f	; 63
 bf4:	f8 94       	cli
 bf6:	de bf       	out	0x3e, r29	; 62
 bf8:	0f be       	out	0x3f, r0	; 63
 bfa:	cd bf       	out	0x3d, r28	; 61
 bfc:	ed 01       	movw	r28, r26
 bfe:	08 95       	ret

00000c00 <_exit>:
 c00:	f8 94       	cli

00000c02 <__stop_program>:
 c02:	ff cf       	rjmp	.-2      	; 0xc02 <__stop_program>
